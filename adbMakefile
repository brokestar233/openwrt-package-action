# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Compiler and linker settings
TOOLCHAIN := /root/openwrt-sdk-x86-64_gcc-14.3.0_musl.Linux-x86_64/staging_dir/toolchain-x86_64_gcc-14.3.0_musl/bin/x86_64-openwrt-linux-musl-
CC := $(TOOLCHAIN)gcc
CXX := $(TOOLCHAIN)g++
LD := $(TOOLCHAIN)g++
AR := $(TOOLCHAIN)ar

# Compiler flags
CFLAGS := -O2 -g -Wall -Wextra -Werror -Wunreachable-code -Wvla -DANDROID_BASE_UNIQUE_FD_DISABLE_IMPLICIT_CONVERSION -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE -D_XOPEN_SOURCE
CXXFLAGS := $(CFLAGS) -std=c++11 -Wthread-safety
FASTBOOTD_CXXFLAGS := $(CXXFLAGS) -DFB_ENABLE_FETCH
LDFLAGS := -lpthread -ldl -rdynamic -Wl,-rpath,.

# Include directories
INCLUDE_DIRS := \
    -I. \
    -I../include \
    -I../mkbootimg \
    -I../libsparse/include \
    -I../../extras/ext4_utils \
    -I../../../external/zlib \
    -I../../../external/openssl/include \
    -I../../../external/libselinux/include \
    -I../../../external/libcxx/include \
    -Iavb_headers \
    -Ibootimg_headers \
    -Ilibstorage_literals_headers \
    -Ilibgtest_prod_headers \
    -Isnapshot_headers

# Source files for fastboot (combining libfastboot and fastboot sources)
FASTBOOT_SRCS := \
    bootimg_utils.cpp \
    fastboot_driver.cpp \
    fastboot.cpp \
    filesystem.cpp \
    fs.cpp \
    socket.cpp \
    storage.cpp \
    super_flash_helper.cpp \
    tcp.cpp \
    udp.cpp \
    util.cpp \
    vendor_boot_img_utils.cpp \
    task.cpp \
    usb_linux.cpp \
    main.cpp

# Source files for fastbootd
FASTBOOTD_SRCS := \
    device/commands.cpp \
    device/fastboot_device.cpp \
    device/flashing.cpp \
    device/main.cpp \
    device/usb.cpp \
    device/usb_iouring.cpp \
    device/usb_client.cpp \
    device/tcp_client.cpp \
    device/utility.cpp \
    device/variables.cpp \
    socket.cpp

# Source files for zlib
ZLIB_SRCS := \
    ../../../external/zlib/src/adler32.c \
    ../../../external/zlib/src/compress.c \
    ../../../external/zlib/src/crc32.c \
    ../../../external/zlib/src/deflate.c \
    ../../../external/zlib/src/gzclose.c \
    ../../../external/zlib/src/gzlib.c \
    ../../../external/zlib/src/gzread.c \
    ../../../external/zlib/src/gzwrite.c \
    ../../../external/zlib/src/infback.c \
    ../../../external/zlib/src/inflate.c \
    ../../../external/zlib/src/inftrees.c \
    ../../../external/zlib/src/inffast.c \
    ../../../external/zlib/src/trees.c \
    ../../../external/zlib/src/uncompr.c \
    ../../../external/zlib/src/zutil.c

# Source files for libsparse
LIBSPARSE_SRCS := \
    ../libsparse/backed_block.c \
    ../libsparse/output_file.c \
    ../libsparse/sparse.c \
    ../libsparse/sparse_crc32.c \
    ../libsparse/sparse_err.c \
    ../libsparse/sparse_read.c

# Source files for ext4_utils
EXT4_UTILS_SRCS := \
    ../../extras/ext4_utils/make_ext4fs.c \
    ../../extras/ext4_utils/ext4fixup.c \
    ../../extras/ext4_utils/ext4_utils.c \
    ../../extras/ext4_utils/allocate.c \
    ../../extras/ext4_utils/contents.c \
    ../../extras/ext4_utils/extent.c \
    ../../extras/ext4_utils/indirect.c \
    ../../extras/ext4_utils/uuid.c \
    ../../extras/ext4_utils/sha1.c \
    ../../extras/ext4_utils/wipe.c \
    ../../extras/ext4_utils/crc16.c

# Source files for libselinux
LIBSELINUX_SRCS := \
    ../../../external/libselinux/src/booleans.c \
    ../../../external/libselinux/src/canonicalize_context.c \
    ../../../external/libselinux/src/disable.c \
    ../../../external/libselinux/src/enabled.c \
    ../../../external/libselinux/src/fgetfilecon.c \
    ../../../external/libselinux/src/fsetfilecon.c \
    ../../../external/libselinux/src/getenforce.c \
    ../../../external/libselinux/src/getfilecon.c \
    ../../../external/libotan/libselinux/src/getpeercon.c \
    ../../../external/libselinux/src/lgetfilecon.c \
    ../../../external/libselinux/src/load_policy.c \
    ../../../external/libselinux/src/lsetfilecon.c \
    ../../../external/libselinux/src/policyvers.c \
    ../../../external/libselinux/src/procattr.c \
    ../../../external/libselinux/src/setenforce.c \
    ../../../external/libselinux/src/setfilecon.c \
    ../../../external/libselinux/src/context.c \
    ../../../external/libselinux/src/mapping.c \
    ../../../external/libselinux/src/stringrep.c \
    ../../../external/libselinux/src/compute_create.c \
    ../../../external/libselinux/src/compute_av.c \
    ../../../external/libselinux/src/avc.c \
    ../../../external/libselinux/src/avc_internal.c \
    ../../../external/libselinux/src/avc_sidtab.c \
    ../../../external/libselinux/src/get_initial_context.c \
    ../../../external/libselinux/src/checkAccess.c \
    ../../../external/libselinux/src/sestatus.c \
    ../../../external/libselinux/src/deny_unknown.c \
    ../../../external/libselinux/src/callbacks.c \
    ../../../external/libselinux/src/check_context.c \
    ../../../external/libselinux/src/freecon.c \
    ../../../external/libselinux/src/init.c \
    ../../../external/libselinux/src/label.c \
    ../../../external/libselinux/src/label_file.c \
    ../../../external/libselinux/src/label_android_property.c

# Source files for libcutils
LIBCUTILS_SRCS := \
    ../libcutils/list.c \
    ../libcutils/socket_inaddr_any_server.c \
    ../libcutils/socket_local_client.c \
    ../libcutils/socket_local_server.c \
    ../libcutils/socket_loopback_client.c \
    ../libcutils/socket_loopback_server.c \
    ../libcutils/socket_network_client.c \
    ../libcutils/load_file.c

# Source files for libziparchive
LIBZIPARCHIVE_SRCS := \
    ../libzipfile/centraldir.c \
    ../libzipfile/zipfile.c

# Object files
FASTBOOT_OBJS := $(FASTBOOT_SRCS:.cpp=.o)
FASTBOOTD_OBJS := $(FASTBOOTD_SRCS:.cpp=.o)
ZLIB_OBJS := $(ZLIB_SRCS:.c=.o)
LIBSPARSE_OBJS := $(LIBSPARSE_SRCS:.c=.o)
EXT4_UTILS_OBJS := $(EXT4_UTILS_SRCS:.c=.o)
LIBSELINUX_OBJS := $(LIBSELINUX_SRCS:.c=.o)
LIBCUTILS_OBJS := $(LIBCUTILS_SRCS:.c=.o)
LIBZIPARCHIVE_OBJS := $(LIBZIPARCHIVE_SRCS:.c=.o)

# Static libraries for fastboot
FASTBOOT_STATIC_LIBS := \
    -lziparchive \
    -lsparse \
    -lutils \
    -llog \
    -llz4 \
    -lz \
    -ldiagnose_usb \
    -lbase \
    -lcutils \
    -lgtest_host \
    -llp \
    -lcrypto \
    -lbuildversion \
    -lext4_utils \
    -lselinux

# Static libraries for fastbootd
FASTBOOTD_STATIC_LIBS := \
    -lboot_control_client \
    -lfs_mgr \
    -lgsi \
    -llp \
    -lsnapshot_cow \
    -llz4 \
    -lzstd \
    -lsnapshot_nobinder \
    -lhealthhalutils \
    -lhealthshim \
    -lfastbootshim \
    -luring \
    -lziparchive \
    -lsparse \
    -lutils \
    -llog \
    -lbase \
    -lcutils \
    -lext2_uuid \
    -lext4_utils \
    -lselinux \
    -lprotobuf-cpp-lite

# Shared libraries for fastbootd
FASTBOOTD_SHARED_LIBS := \
    -landroid.hardware.boot@1.0 \
    -landroid.hardware.boot@1.1 \
    -landroid.hardware.boot-V1-ndk \
    -landroid.hardware.fastboot@1.1 \
    -landroid.hardware.fastboot-V1-ndk \
    -landroid.hardware.health@2.0 \
    -landroid.hardware.health-V4-ndk \
    -lasyncio \
    -lbase \
    -lbinder_ndk \
    -lbootloader_message \
    -lhidlbase

# VPATH for source file lookup
VPATH := \
    . \
    device \
    ../libsparse \
    ../../extras/ext4_utils \
    ../../../external/zlib/src \
    ../../../external/libselinux/src \
    ../libcutils \
    ../libzipfile

# Rules
all: fastboot fastbootd

# Rule to build fastboot executable
fastboot: $(FASTBOOT_OBJS) $(ZLIB_OBJS) $(LIBSPARSE_OBJS) $(EXT4_UTILS_OBJS) $(LIBSELINUX_OBJS) $(LIBCUTILS_OBJS) $(LIBZIPARCHIVE_OBJS)
	$(LD) -o $@ $(FASTBOOT_OBJS) $(ZLIB_OBJS) $(LIBSPARSE_OBJS) $(EXT4_UTILS_OBJS) $(LIBSELINUX_OBJS) $(LIBCUTILS_OBJS) $(LIBZIPARCHIVE_OBJS) $(FASTBOOT_STATIC_LIBS) $(LDFLAGS)

# Rule to build fastbootd executable
fastbootd: $(FASTBOOTD_OBJS) $(ZLIB_OBJS) $(LIBSPARSE_OBJS) $(EXT4_UTILS_OBJS) $(LIBSELINUX_OBJS) $(LIBCUTILS_OBJS) $(LIBZIPARCHIVE_OBJS)
	$(LD) -o $@ $(FASTBOOTD_OBJS) $(ZLIB_OBJS) $(LIBSPARSE_OBJS) $(EXT4_UTILS_OBJS) $(LIBSELINUX_OBJS) $(LIBCUTILS_OBJS) $(LIBZIPARCHIVE_OBJS) $(FASTBOOTD_STATIC_LIBS) $(FASTBOOTD_SHARED_LIBS) $(LDFLAGS)

# Compile C++ files for fastboot
%.o: %.cpp
	$(CXX) $(CXXFLAGS) $(INCLUDE_DIRS) -c $< -o $@

# Compile C++ files for fastbootd
$(FASTBOOTD_OBJS): %.o: %.cpp
	$(CXX) $(FASTBOOTD_CXXFLAGS) $(INCLUDE_DIRS) -c $< -o $@

# Compile C files
%.o: %.c
	$(CC) $(CFLAGS) $(INCLUDE_DIRS) -c $< -o $@

# Clean rule
clean:
	rm -rf $(FASTBOOT_OBJS) $(FASTBOOTD_OBJS) $(ZLIB_OBJS) $(LIBSPARSE_OBJS) $(EXT4_UTILS_OBJS) $(LIBSELINUX_OBJS) $(LIBCUTILS_OBJS) $(LIBZIPARCHIVE_OBJS) fastboot fastbootd

# Phony targets
.PHONY: all clean