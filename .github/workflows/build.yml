# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt-get install git ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev g++-multilib libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc libc6-dev-i386 lib32ncurses5-dev libx11-dev lib32z-dev libgl1-mesa-dev xsltproc unzip device-tree-compiler python2 python3

      # Install ccache
      - name: Install ccache
        run: sudo apt update && sudo apt install -y ccache python3 git curl

      - name: Set up ccache
        run: |
          mkdir -p ~/.cache # Ensure the directory exists
          ccache --version
          ccache --max-size=2G
          ccache --set-config=compression=true
          echo "CCACHE_DIR=$HOME/.ccache" >> $GITHUB_ENV
      
      - name: Restore ccache from cache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: fastboot-ccache
          restore-keys: |
            fastboot-ccache

      # Runs a set of commands using the runners shell
      - name: prepare build environment
        run: |
          #wget https://downloads.openwrt.org/releases/24.10.1/targets/x86/64/openwrt-sdk-24.10.1-x86-64_gcc-13.3.0_musl.Linux-x86_64.tar.zst
          #tar -xvf openwrt-sdk-24.10.1-x86-64_gcc-13.3.0_musl.Linux-x86_64.tar.zst
          #cd openwrt-sdk-24.10.1-x86-64_gcc-13.3.0_musl.Linux-x86_64
          #mkdir package/fastboot
          #cp -r ../adbMakefile package/fastboot
          #cp -r ../Makefile package/fastboot
          #cp -r ../.config package/
          git clone https://github.com/smaeul/android-tools

      - name: build
        run: |
          #cd openwrt-sdk-24.10.1-x86-64_gcc-13.3.0_musl.Linux-x86_64
          #./scripts/feeds update -a
          #./scripts/feeds install libopenssl
          #./staging_dir/host/bin/usign -G -s ./key-build -p ./key-build.pub -c "Local build key"
          #make oldconfig V=s CC="ccache gcc" CXX="ccache g++"
          #make V=s CC="ccache gcc" CXX="ccache g++"
          #zip -r IPK.zip bin/targets/x86/64/packages/
          cd android-tools
          git submodule update --init --recursive
          make
          zip -r 1.zip .

      - name: Upload IPK
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 3
          files: 1.zip
